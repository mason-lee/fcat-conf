<!DOCTYPE html>
<html>
	<head>
		<title>We Are FCAT</title>

		<!-- Viewport mobile tag for sensible mobile support -->
		<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

		
		<!--  
				Stylesheets and Preprocessors
				==============================

				You can always bring in CSS files manually with `<link>` tags, or asynchronously
				using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
				of Sails' conventional asset pipeline (boilerplate Gruntfile).

				By default, stylesheets from your `assets/styles` folder are included
				here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
				are supported. In production, your styles will be minified and concatenated into
				a single file.
				
				To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
				For example, here are a few things you could do:
						
						+ Change the order of your CSS files
						+ Import stylesheets from other directories
						+ Use a different or additional preprocessor, like SASS, SCSS or Stylus
		-->

		<!--STYLES-->
<link rel="stylesheet" href="/styles/animate.min.css">
<link rel="stylesheet" href="/styles/bootstrap-theme.css">
<link rel="stylesheet" href="/styles/bootstrap.css">
<link rel="stylesheet" href="/styles/bootstrapValidator.css">
<link rel="stylesheet" href="/styles/meanmenu.min.css">
<link rel="stylesheet" href="/styles/proxima-nova/specimen_files/grid_12-825-55-15.css">
<link rel="stylesheet" href="/styles/proxima-nova/specimen_files/specimen_stylesheet.css">
<link rel="stylesheet" href="/styles/proxima-nova/stylesheet.css">
<link rel="stylesheet" href="/styles/style.css">
<!--STYLES END-->
	</head>

	<body>
		<header>
			<div class="container">
				<div class="logo-wrapper pull-left">
					<a href="/">
						<img src="/images/FCAT-logo.svg" alt="fcat-logo">
					</a>
				</div>
				<nav class="pull-right">
					<ul class="list-inline">
						<li>
							<a href="/about">
								<h4>
									FCAT 2015
								</h4> 
							</a>
						</li>
						<li>
							<a href="/about">
								<h4>
									ABOUT THIS SITE
								</h4> 
							</a>
						</li>
						<li>
							<a href="/submit" class="custom-button">
								SUBMIT YOUR STORY
							</a>
						</li>
					</ul>
				</nav>
				
				
			</div>
		</header>
		
		<div class="header-border container"></div>
		
		<section id="content">
			<%- body %>
		</section>
		
		<section class="bottom-section">
			<div class="container">
				<div class="col-md-6 pull-left">
					<h2>
						Did you enjoy our story?<br>
						Share your story as well!
					</h2>
					<div class="button-bottom">
						<a href="/submit" class="custom-button">
							SUBMIT YOUR STORY
						</a>
					</div>
					
				</div>
				<div class="col-md-6 pull-left">
					<div class="twitter-wrapper">
						<a class="twitter-timeline" href="https://twitter.com/hashtag/fcat" data-widget-id="524821383520321536">#fcat Tweets</a> <script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</script>
					</div>
				</div>
			</div>
		</section>
		<footer>
			<div class="container">
				<span>
					Â© Simon Fraser University
				</span>
				<div class="pull-right">
					<span>
						Developed by <a href="http://masonlee.me">Mason Lee</a> (Front/Back-end) and <a href="">Danny Blackstock</a> (Front-end)
					</span>
				</div>
			</div>
		</footer>

		<!--
				Client-side Templates
				========================

				HTML templates are important prerequisites of modern, rich client applications.
				To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
				that you load these templates client-side.

				By default, your Gruntfile is configured to automatically load and precompile
				client-side JST templates in your `assets/templates` folder, then
				include them here automatically (between TEMPLATES and TEMPLATES END).
				
				To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
				For example, here are a few things you could do:

						+ Import templates from other directories
						+ Use a different template engine (handlebars, jade, dust, etc.)
						+ Internationalize your client-side templates using a server-side
							stringfile before they're served.
		-->

		<!--TEMPLATES-->

<!--TEMPLATES END-->


		<!--

			Client-side Javascript
			========================

			You can always bring in JS files manually with `script` tags, or asynchronously
			on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
			take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

			By default, files in your `assets/js` folder are included here
			automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
			CoffeeScript (.coffee) are supported. In production, your scripts will be minified
			and concatenated into a single file.
			
			To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
			For example, here are a few things you could do:
					
					+ Change the order of your scripts
					+ Import scripts from other directories
					+ Use a different preprocessor, like TypeScript

		-->

		<!--SCRIPTS-->
<script src="/js/dependencies/sails.io.js"></script>
<script src="/js/dependencies/jquery.js"></script>
<script src="/js/dependencies/bootstrap.min.js"></script>
<script src="/js/dependencies/isotope.pkgd.min.js"></script>
<script src="/js/dependencies/jquery.meanmenu.min.js"></script>
<script src="/js/dependencies/bootstrapValidator.js"></script>
<script src="/js/dependencies/jquery.validate.min.js"></script>
<script src="/js/main.js"></script>
<!--SCRIPTS END-->
	</body>
</html>
